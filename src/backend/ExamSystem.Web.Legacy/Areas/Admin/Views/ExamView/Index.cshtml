@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Exam-View";
}

@section Styles {
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="~/tabler/css/tabler.min.css" rel="stylesheet" asp-append-version="true" />
    <a href="~/lib/tabulator/dist/css/tabulator_semanticui.css.map"></a>
    <a href="~/lib/tabulator/dist/css/tabulator_semanticui.min.css.map"></a>
    <link href="~/lib/tabulator/dist/css/tabulator_semanticui.min.css" rel="stylesheet" />
    <link href="~/lib/tabulator/dist/css/tabulator_semanticui.css" rel="stylesheet" />
    <link href="~/bootstrap-icons-1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    <link href="~/bootstrap-icons-1.11.3/font/bootstrap-icons.min.css" rel="stylesheet" />
    <link href="~/lib/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/lib/sweetalert2/dist/sweetalert2.css" rel="stylesheet" />
    <link href="~/lib/flatpicker/flatpickr.min.css" rel="stylesheet" />
    <link href="~/lib/flatpicker/themes/dark.css" rel="stylesheet" />
    <style>
        :root {
            --tblr-font-sans-serif: 'Inter', -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif;
        }

        body {
            font-feature-settings: "cv03", "cv04", "cv11";
        }
    </style>
}

<div class="container">
    <div class="row mt-3">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <span class="fs-1">All Exams</span>
                </div>
                <div class="card-body">
                    <div class="mt-3" id="example-table"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery/dist/jquery-min-3-6-0.js" asp-append-version="true"></script>
    <script src="~/tabler/js/tabler.min.js" asp-append-version="true"></script>
    <script src="~/lib/tabulator/dist/js/tabulator.min.js" asp-append-version="true"></script>
    <script src="~/lib/flatpicker/flatpickr.min.js"></script>
    <a href="~/lib/luxon/build/global/luxon.js.map"></a>
    <a href="~/lib/luxon/build/global/luxon.min.js.map"></a>
    <script src="~/lib/luxon/build/global/luxon.min.js"></script>
    <script src="~/lib/luxon/build/global/luxon.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.all.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.min.js"></script>
    <script src="~/lib/sweetalert2/dist/sweetalert2.js"></script>
    <script>
        var singleDateEditor = function (cell, onRendered, success, cancel, editorParams) {
            var editor = document.createElement("input");
            editor.setAttribute("type", "text");
            editor.style.cssText = "width:100%; height:100%;";

            onRendered(function () {
                flatpickr(editor, {
                    enableTime: true,
                    dateFormat: "d/m/Y H:i",
                    onClose: function (selectedDates, dateStr, instance) {
                        if (selectedDates.length) {
                            success(dateStr);
                        } else {
                            cancel();
                        }
                    }
                });

                editor.focus();
            });

            return editor;
        };

        var table = new Tabulator("#example-table", {
            layout: "fitColumns",
            pagination: true,
            paginationCounter: "rows",
            paginationMode: "remote",
            filterMode: "remote",
            sortMode: "remote",
            paginationSize: 15,
            paginationSizeSelector: [15, 25, 35, 50],
            ajaxURL: "/admin/exam-view/getdata",
            ajaxContentType: "json",
            ajaxConfig: {
                method: "POST",
            },
            columns: [
                {
                    title: "Exam Title",
                    field: "title",
                    hozAlign: "center",
                    width: 160,
                    headerFilter: "input"
                },
                {
                    title: "Score",
                    field: "score",
                    hozAlign: "center",
                    width: 140,
                    sorter: "number",
                    headerFilter: "input",
                    headerFilterFunc: ">=",
                    headerFilterPlaceholder: "more than...",
                    headerFilterLiveFilter: false
                },
                {
                    title: "Participant Count",
                    field: "participant",
                    hozAlign: "center",
                    width: 200,
                    headerFilter: "number",
                    headerFilterPlaceholder: "at least...",
                    headerFilterFunc: ">="
                },
                {
                    title: "Exam Type",
                    field: "type",
                    width: 150,
                    headerFilter: "list",
                    headerFilterParams: {
                        values: {
                            "Mcq Question": "Mcq Question",
                            "Short Question": "Short Question",
                            "Coding": "Coding",
                            "": "All"
                        },
                        clearable: true
                    }
                },
                {
                    title: "Exam Start Date",
                    field: "start",
                    hozAlign: "center",
                    width: 200,
                    sorter: "datetime",
                    sorterParams: { format: "DD/MM/YYYY hh:mm A" },
                    formatter: function (cell) {
                        var value = cell.getValue();
                        return luxon.DateTime.fromISO(value).toFormat("dd/MM/yyyy hh:mm a");
                    },
                    headerFilter: singleDateEditor,
                    headerFilterFunc: ">="
                },
                {
                    title: "Exam End Date",
                    field: "end",
                    hozAlign: "center",
                    width: 200,
                    sorter: "datetime",
                    sorterParams: { format: "DD/MM/YYYY hh:mm A" },
                    formatter: function (cell) {
                        var value = cell.getValue();
                        return luxon.DateTime.fromISO(value).toFormat("dd/MM/yyyy hh:mm a");
                    },
                    headerFilter: singleDateEditor,
                    headerFilterFunc: ">="
                },
                {
                    title: "Action",
                    field: "id",
                    width: 200,
                    formatter: function (cell) {
                        var id = cell.getValue();
                        return "<a class='btn btn-success' href='/admin/exam-view/view-item?id=" + id + "' title='View'><i class='bi bi-eye'></i></a> " +
                            "<a class='btn btn-primary' href='/admin/exam-view/update-item?id=" + id + "' title='Edit'><i class='bi bi-pencil-square'></i></a> " +
                            "<a class='btn btn-danger delete-btn' data-id='" + id + "' title='Delete'><i class='bi bi-trash'></i></a>";
                    }
                }
            ],
            rowFormatter: function (row) {
                row.getElement().querySelectorAll('.delete-btn').forEach(function (button) {
                    button.addEventListener('click', function (e) {
                        e.preventDefault();
                        var buttonElement = e.target.closest('.delete-btn');
                        var id = buttonElement.getAttribute('data-id');

                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You won't be able to revert this!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Yes, delete it!',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                $.ajax({
                                    url: '/admin/exam-view/delete-item?id=' + id,
                                    type: 'POST',
                                    success: function (data) {
                                        if (data.success) {
                                            Swal.fire({
                                                title: "Deleted!",
                                                text: "Your file has been deleted.",
                                                icon: "success",
                                                confirmButtonColor: '#3085d6'
                                            }).then(() => {
                                                // Optionally refresh the table or remove the row
                                                table.replaceData(); // Replace data to refresh the table
                                            });
                                        } else {
                                            Swal.fire({
                                                title: "Error!",
                                                text: data.message || "There was an issue deleting the file.",
                                                icon: "error",
                                                confirmButtonColor: '#3085d6'
                                            });
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        Swal.fire({
                                            title: "Error!",
                                            text: "There was an issue deleting the file.",
                                            icon: "error",
                                            confirmButtonColor: '#3085d6'
                                        });
                                    }
                                });
                            }
                        });
                    });
                });
            }
        });
    </script>
}
